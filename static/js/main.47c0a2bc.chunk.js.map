{"version":3,"sources":["contexts/SpinnerContextProvider.js","contexts/ModeContextProvider.js","components/CardsLists.js","App.js","reportWebVitals.js","index.js"],"names":["SpinnerContext","createContext","SpinnerContextProvider","state","spinner","showSpinner","value","setState","Provider","this","Backdrop","style","zIndex","color","open","CircularProgress","props","children","Component","ModeContext","ModeContextProvider","mode","submitMode","CardsLists","useContext","useState","view","setView","data","onSubmit","firstName","lastName","email","city","street","phone","website","id","pageInputs","setInputs","err","setErr","className","map","v","onClick","param","name","split","address","substring","icon","faEnvelope","faAddressCard","faPhone","faGlobe","boxShadow","width","height","border","onChange","target","type","pattern","console","log","fetch","method","body","JSON","stringify","headers","then","response","json","submit","App","setData","useEffect","loadData","a","message","btnClicked","returnedObject","object","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47c0a2bc.chunk.js","sourcesContent":["import React, { Component, createContext } from \"react\";\r\n\r\nimport { Backdrop, CircularProgress } from \"@material-ui/core\";\r\n\r\nexport const SpinnerContext = createContext();\r\n\r\nclass SpinnerContextProvider extends Component {\r\n  state = {\r\n    spinner: false,\r\n  };\r\n  showSpinner = (value) => {\r\n    this.setState({\r\n      spinner: value,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <SpinnerContext.Provider\r\n        value={{\r\n          showSpinner: this.showSpinner,\r\n        }}\r\n      >\r\n        <Backdrop\r\n          style={{ zIndex: \"999999999999\", color: \"#fff\" }}\r\n          open={this.state.spinner}\r\n        >\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        {this.props.children}\r\n      </SpinnerContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpinnerContextProvider;\r\n","import React, { Component, createContext } from \"react\";\r\n\r\nexport const ModeContext = createContext();\r\n\r\nclass ModeContextProvider extends Component {\r\n  state = {\r\n    mode: \"\",\r\n  };\r\n  submitMode = (value) => {\r\n    this.setState({\r\n      mode: value,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <ModeContext.Provider\r\n        value={{\r\n          mode: this.state.mode,\r\n          submitMode: this.submitMode,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </ModeContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModeContextProvider;\r\n","import { useState, useContext } from \"react\";\r\n\r\nimport {\r\n  faAddressCard,\r\n  faEnvelope,\r\n  faGlobe,\r\n  faPhone,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { SpinnerContext } from \"../contexts/SpinnerContextProvider\";\r\nimport { ModeContext } from \"../contexts/ModeContextProvider\";\r\nimport \"../cardsLists.scss\";\r\nfunction CardsLists(props) {\r\n  const { showSpinner } = useContext(SpinnerContext);\r\n  const { mode } = useContext(ModeContext);\r\n  const [view, setView] = useState();\r\n  const { data, onSubmit } = props;\r\n  const [pageInputs, setInputs] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    city: \"\",\r\n    street: \"\",\r\n    phone: \"\",\r\n    website: \"\",\r\n    id: \"\",\r\n  });\r\n  const [err, setErr] = useState(false);\r\n\r\n  const submit = () => {\r\n    console.log(pageInputs);\r\n    try {\r\n      if (\r\n        !pageInputs.firstName ||\r\n        !pageInputs.lastName ||\r\n        !pageInputs.city ||\r\n        !pageInputs.street ||\r\n        !pageInputs.phone ||\r\n        !pageInputs.email ||\r\n        !pageInputs.website\r\n      ) {\r\n        return setErr(true);\r\n      }\r\n      showSpinner(true);\r\n      fetch(`https://jsonplaceholder.typicode.com/users/${pageInputs.id}`, {\r\n        method: mode === \"add\" ? \"POST\" : \"PUT\",\r\n        body: JSON.stringify({\r\n          name: `${pageInputs.firstName} ${pageInputs.lastName}`,\r\n          email: pageInputs.email,\r\n          phone: pageInputs.phone,\r\n          address: { street: pageInputs.street, city: pageInputs.city },\r\n          website: pageInputs.website,\r\n        }),\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((json) => onSubmit(json))\r\n        .then(() => showSpinner(false))\r\n        .then(() => setView(\"view\"));\r\n    } catch (err) {\r\n      console.log(err, \"err\");\r\n      showSpinner(false);\r\n    }\r\n  };\r\n  const clear = () => {\r\n    setInputs({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      city: \"\",\r\n      street: \"\",\r\n      phone: \"\",\r\n      website: \"\",\r\n      id: pageInputs.id,\r\n    });\r\n    setErr(false);\r\n  };\r\n  const update = (param) => {\r\n    setInputs({\r\n      firstName: param.name.split(\" \")[0],\r\n      lastName: param.name.split(\" \")[1],\r\n      email: param.email,\r\n      city: param.address.city,\r\n      street: param.address.street,\r\n      phone: param.phone,\r\n      website: param.website,\r\n      id: param.id,\r\n    });\r\n    setView(\"edit\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {data &&\r\n        mode === \"view\" &&\r\n        view !== \"edit\" &&\r\n        data.map((v) => (\r\n          <div onClick={() => update(v)} key={v.id} className=\"cards\">\r\n            <div className=\"profile\">\r\n              <div className=\"initilals\">\r\n                <div>\r\n                  {v.name.split(\" \")[0]?.substring(0, 1)}\r\n                  {v.name.split(\" \")[1]?.substring(0, 1)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"userDetails\">\r\n              <div className=\"title\">{v.name}</div>\r\n              <div>\r\n                <FontAwesomeIcon icon={faEnvelope} /> {v.email}\r\n              </div>\r\n              <div>\r\n                <FontAwesomeIcon icon={faAddressCard} /> {v.address.city},{\" \"}\r\n                {v.address.street}\r\n              </div>\r\n\r\n              <div>\r\n                <FontAwesomeIcon icon={faPhone} /> {v.phone}\r\n              </div>\r\n              <div className=\"website\">\r\n                <FontAwesomeIcon icon={faGlobe} /> {v.website}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      {(mode === \"add\" || view === \"edit\") && (\r\n        <div\r\n          className=\"cards\"\r\n          style={{ boxShadow: \"none\", width: \"100%\", height: \"600px\" }}\r\n        >\r\n          <div className=\"profile\">\r\n            <div className=\"initilals\">\r\n              <div>\r\n                {pageInputs.firstName?.substring(0, 1)}\r\n                {pageInputs.lastName?.substring(0, 1)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"userDetailsModif\">\r\n            <div className=\"title\">\r\n              {\" \"}\r\n              First Name:{\" \"}\r\n              <input\r\n                name=\"firstName\"\r\n                value={pageInputs.firstName}\r\n                style={{\r\n                  border: !pageInputs.firstName && err && \"1px solid red\",\r\n                }}\r\n                onChange={({ target }) =>\r\n                  setInputs((state) => ({\r\n                    ...state,\r\n                    firstName: target.value,\r\n                  }))\r\n                }\r\n              />{\" \"}\r\n            </div>\r\n            <div className=\"title\">\r\n              {\" \"}\r\n              Last Name:{\" \"}\r\n              <input\r\n                name=\"lastName\"\r\n                value={pageInputs.lastName}\r\n                style={{\r\n                  border: !pageInputs.lastName && err && \"1px solid red\",\r\n                }}\r\n                onChange={({ target }) =>\r\n                  setInputs((state) => ({ ...state, lastName: target.value }))\r\n                }\r\n              />\r\n            </div>\r\n            <div>\r\n              <FontAwesomeIcon icon={faEnvelope} /> email:{\" \"}\r\n              <input\r\n                name=\"email\"\r\n                value={pageInputs.email}\r\n                type=\"email\"\r\n                style={{\r\n                  border: !pageInputs.email && err && \"1px solid red\",\r\n                }}\r\n                onChange={({ target }) =>\r\n                  setInputs((state) => ({ ...state, email: target.value }))\r\n                }\r\n              />\r\n            </div>\r\n            <div>\r\n              <FontAwesomeIcon icon={faAddressCard} /> city:{\" \"}\r\n              <input\r\n                name=\"city\"\r\n                value={pageInputs.city}\r\n                style={{\r\n                  border: !pageInputs.city && err && \"1px solid red\",\r\n                }}\r\n                onChange={({ target }) =>\r\n                  setInputs((state) => ({ ...state, city: target.value }))\r\n                }\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <FontAwesomeIcon icon={faAddressCard} /> street:\r\n              <input\r\n                name=\"street\"\r\n                value={pageInputs.street}\r\n                onChange={({ target }) =>\r\n                  setInputs((state) => ({ ...state, street: target.value }))\r\n                }\r\n                style={{\r\n                  border: !pageInputs.street && err && \"1px solid red\",\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <FontAwesomeIcon icon={faPhone} /> phone:{\" \"}\r\n              <input\r\n                name=\"phone\"\r\n                type=\"tel\"\r\n                pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\"\r\n                style={{\r\n                  border: !pageInputs.phone && err && \"1px solid red\",\r\n                }}\r\n                value={pageInputs.phone}\r\n                onChange={({ target }) =>\r\n                  setInputs((state) => ({ ...state, phone: target.value }))\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"website\">\r\n              <FontAwesomeIcon icon={faGlobe} /> website{\" \"}\r\n              <input\r\n                name=\"website\"\r\n                value={pageInputs.website}\r\n                style={{\r\n                  border: !pageInputs.website && err && \"1px solid red\",\r\n                }}\r\n                onChange={({ target }) =>\r\n                  setInputs((state) => ({ ...state, website: target.value }))\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"btnFooter\">\r\n              <div>\r\n                <button onClick={() => clear()} className=\"clear\">\r\n                  clear\r\n                </button>\r\n              </div>\r\n              <div>\r\n                <button onClick={() => submit()} className=\"accept\">\r\n                  ok\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardsLists;\r\n","import { useEffect, useState, useContext } from \"react\";\nimport CardsLists from \"./components/CardsLists\";\nimport { SpinnerContext } from \"./contexts/SpinnerContextProvider\";\nimport { ModeContext } from \"./contexts/ModeContextProvider\";\n\nimport \"./home.scss\";\nfunction App() {\n  const { showSpinner } = useContext(SpinnerContext);\n  const { submitMode, mode } = useContext(ModeContext);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    loadData();\n\n    // eslint-disable-next-line\n  }, []);\n\n  const loadData = async () => {\n    try {\n      submitMode(\"view\");\n      showSpinner(true);\n      fetch(\"https://jsonplaceholder.typicode.com/users\")\n        .then((response) => response.json())\n        .then((json) => setData(json))\n        .then(() => showSpinner(false));\n    } catch (err) {\n      console.log(err.message, \"err\");\n      showSpinner(false);\n    }\n  };\n  const btnClicked = (mode) => {\n    submitMode(mode);\n  };\n\n  const returnedObject = () => (object) => {\n    if (mode === \"add\") {\n      setData([...data, object]);\n    } else {\n      data.map((v) => {\n        if (v.id == object.id) {\n          v.name = object.name;\n          v.phone = object.phone;\n          v.email = object.email;\n          v.website = object.website;\n          v.address.city = object.address.city;\n          v.address.street = object.address.street;\n        }\n      });\n    }\n    submitMode(\"view\");\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <div className=\"marginLeft\"></div>\n        <div className=\"title\">Profile Cards Lists</div>\n        <div className=\"addUser\">\n          {mode === \"view\" ? (\n            <button onClick={() => btnClicked(\"add\")}> Add user </button>\n          ) : (\n            <button onClick={() => btnClicked(\"view\")}>Show List</button>\n          )}\n        </div>\n      </header>\n      {mode === \"view\" && (\n        <CardsLists onSubmit={returnedObject()} data={data} />\n      )}\n      {(mode === \"add\" || mode === \"edit\") && (\n        <CardsLists onSubmit={returnedObject()} data={data} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport SpinnerContextProvider from \"./contexts/SpinnerContextProvider\";\nimport ModeContextProvider from \"./contexts/ModeContextProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SpinnerContextProvider>\n      <ModeContextProvider>\n        <App />\n      </ModeContextProvider>\n    </SpinnerContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}